<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_audio_modification_8cpp" kind="file" language="C++">
    <compoundname>AudioModification.cpp</compoundname>
    <includes refid="_audio_modification_8h" local="yes">AudioModification.h</includes>
    <incdepgraph>
      <node id="15">
        <label>ARA_Library/PlugIn/ARAPlug.h</label>
      </node>
      <node id="1">
        <label>Source/ARA/AudioModification.cpp</label>
        <link refid="_audio_modification_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AudioModification.h</label>
        <link refid="_audio_modification_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Model.h</label>
        <link refid="_model_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Wave2Wave.h</label>
        <link refid="_wave2_wave_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../DeepLearning/WebModel.h</label>
        <link refid="_web_model_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>any</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>juce_audio_basics/juce_audio_basics.h</label>
      </node>
      <node id="13">
        <label>juce_audio_formats/juce_audio_formats.h</label>
      </node>
      <node id="14">
        <label>juce_core/juce_core.h</label>
      </node>
      <node id="10">
        <label>juce_events/juce_events.h</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="9">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>This file is part of the JUCE examples. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2022 - Raw Material Software Limited The code included in this file is provided under the terms of the ISC license <ulink url="http://www.isc.org/downloads/software-support-policy/isc-license">http://www.isc.org/downloads/software-support-policy/isc-license</ulink>. Permission To use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted provided that the above copyright notice and this permission notice appear in all copies.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot; WITHOUT ANY WARRANTY, AND ALL WARRANTIES, WHETHER EXPRESSED OR IMPLIED, INCLUDING MERCHANTABILITY AND FITNESS FOR PURPOSE, ARE DISCLAIMED.</para>
<para>Audio modification class started from the ARAPluginDemo.h file provided by juce. This class now also manages offline processing. <simplesect kind="author"><para>JUCE, aldo aguilar, hugo flores garcia, xribene </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_modification_8h" kindref="compound">AudioModification.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_audio_modification_1a292b55d0527b0515e7df8ab9bc9d1e31" kindref="member">AudioModification::AudioModification</ref>(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>juce::ARAAudioSource<sp/>*audioSource,<sp/>ARA::ARAAudioModificationHostRef<sp/>hostRef,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ARAAudioModification<sp/>*optionalModificationToClone)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>ARAAudioModification(audioSource,<sp/>hostRef,<sp/>optionalModificationToClone){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::the<sp/>audio<sp/>source<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>audioSource-&gt;getName());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::<sp/>create<sp/>reader<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>audioSource-&gt;getName());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>mAudioSourceReader<sp/>=<sp/>std::make_unique&lt;juce::ARAAudioSourceReader&gt;(audioSource);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>readMaxLevels<sp/>(int64<sp/>startSample,<sp/>int64<sp/>numSamples,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Range&lt;float&gt;*<sp/>results,<sp/>int<sp/>numChannelsToRead);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>juce::Range&lt;float&gt;<sp/>results;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>mAudioSourceReader-&gt;readMaxLevels(0,<sp/>mAudioSourceReader-&gt;lengthInSamples,<sp/>&amp;results,<sp/>1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::<sp/>max<sp/>level:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>results.getStart()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>results.getEnd());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>mSampleRate<sp/>=<sp/>audioSource-&gt;getSampleRate();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>mAudioSourceName<sp/>=<sp/>audioSource-&gt;getName();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AudioModification::isThumbCreated()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mThumbCreated;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudioModification::setThumbCreated(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>created)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>mThumbCreated<sp/>=<sp/>created;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">std::string<sp/>AudioModification::getSourceName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAudioSourceName;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audio_modification_1a02637957e0d459d239faf9392af0a32a" kindref="member">AudioModification::process</ref>(std::shared_ptr&lt;WebWave2Wave&gt;<sp/>model,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dawSampleRate)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;AudioModification::process:<sp/>model<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!model-&gt;ready())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;AudioModification::process:<sp/>model<sp/>is<sp/>not<sp/>ready&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mAudioSourceReader-&gt;isValid())</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::<sp/>invalid<sp/>audio<sp/>source<sp/>reader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numChannels<sp/>=<sp/>mAudioSourceReader-&gt;numChannels;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numSamples<sp/>=<sp/>mAudioSourceReader-&gt;lengthInSamples;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sourceSampleRate<sp/>=<sp/>mSampleRate;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::<sp/>audio<sp/>source:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>mAudioSourceName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>channels:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>juce::String(numChannels)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>length<sp/>in<sp/>samples:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>juce::String(numSamples));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>mAudioBuffer.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>juce::AudioBuffer&lt;float&gt;(numChannels,<sp/>numSamples));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>into<sp/>audio<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>juce::Range&lt;float&gt;<sp/>results;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mAudioSourceReader-&gt;readMaxLevels(0,<sp/>mAudioSourceReader-&gt;lengthInSamples,<sp/>&amp;results,<sp/>1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;AudioModification::<sp/>max<sp/>level:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>results.getStart()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>results.getEnd());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;is<sp/>valid<sp/>audio<sp/>source<sp/>reader:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mAudioSourceReader-&gt;isValid());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mAudioSourceReader-&gt;read(mAudioBuffer.get(),<sp/>0,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(numSamples),<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bufferRMS<sp/>=<sp/>mAudioBuffer-&gt;getRMSLevel(0,<sp/>0,<sp/>mAudioBuffer-&gt;getNumSamples());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;buffer<sp/>RMS<sp/>in<sp/>AudioMod.cpp:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(bufferRMS));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;mAudioBuffer&apos;s<sp/>memory<sp/>address:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)mAudioBuffer.get()));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;process(mAudioBuffer.get(),<sp/>sourceSampleRate,<sp/>dawSampleRate);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>the<sp/>modified<sp/>buffer<sp/>to<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>mIsModified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>mThumbCreated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">juce::AudioBuffer&lt;float&gt;<sp/>*AudioModification::getModifiedAudioBuffer()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAudioBuffer.get();</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AudioModification::getIsModified()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIsModified;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="Source/ARA/AudioModification.cpp"/>
  </compounddef>
</doxygen>
