<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_processor_editor_8cpp" kind="file" language="C++">
    <compoundname>ProcessorEditor.cpp</compoundname>
    <includes refid="_processor_editor_8h" local="yes">ProcessorEditor.h</includes>
    <includes refid="_web_model_8h" local="yes">../DeepLearning/WebModel.h</includes>
    <incdepgraph>
      <node id="5">
        <label>ARA_Library/PlugIn/ARAPlug.h</label>
      </node>
      <node id="6">
        <label>ARA_Library/Utilities/ARAPitchInterpretation.h</label>
      </node>
      <node id="8">
        <label>ARA_Library/Utilities/ARATimelineConversion.h</label>
      </node>
      <node id="25">
        <label>../ARA/AudioModification.h</label>
        <link refid="_audio_modification_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>AudioProcessorImpl.h</label>
        <link refid="_audio_processor_impl_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>CtrlComponent.h</label>
        <link refid="_ctrl_component_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>../ARA/DocumentControllerSpecialisation.h</label>
        <link refid="_document_controller_specialisation_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>EditorRenderer.h</label>
        <link refid="_editor_renderer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../ARA/EditorView.h</label>
        <link refid="_editor_view_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>../ARA/PlaybackRegion.h</label>
        <link refid="_playback_region_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>PlaybackRenderer.h</label>
        <link refid="_playback_renderer_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Source/ARA/ProcessorEditor.cpp</label>
        <link refid="_processor_editor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ProcessorEditor.h</label>
        <link refid="_processor_editor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Model.h</label>
        <link refid="_model_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Wave2Wave.h</label>
        <link refid="_wave2_wave_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../DeepLearning/WebModel.h</label>
        <link refid="_web_model_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>../Timeline/PlaybackRegionView.h</label>
        <link refid="_playback_region_view_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>../Timeline/PlayheadPositionLabel.h</label>
        <link refid="_playhead_position_label_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>../Timeline/SharedTimeSliceThread.h</label>
        <link refid="_shared_time_slice_thread_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>../UI/CustomComponents.h</label>
        <link refid="_custom_components_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../UI/DocumentView.h</label>
        <link refid="_document_view_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Layout.h</label>
        <link refid="_layout_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>../UI/LookAndFeel.h</label>
        <link refid="_look_and_feel_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>RegionSequenceView.h</label>
        <link refid="_region_sequence_view_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>RulersHeader.h</label>
        <link refid="_rulers_header_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>RulersView.h</label>
        <link refid="_rulers_view_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>TrackHeader.h</label>
        <link refid="_track_header_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ZoomControls.h</label>
        <link refid="_zoom_controls_8h"/>
      </node>
      <node id="34">
        <label>../Util/AsyncConfigurationCallback.h</label>
        <link refid="_async_configuration_callback_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Crossfade.h</label>
        <link refid="_crossfade_8h"/>
      </node>
      <node id="35">
        <label>../Util/Looper.h</label>
        <link refid="_looper_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>../Util/PreviewState.h</label>
        <link refid="_preview_state_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>../Util/ProcessingLockInterface.h</label>
        <link refid="_processing_lock_interface_8h"/>
      </node>
      <node id="28">
        <label>../Util/TimeToViewScaling.h</label>
        <link refid="_time_to_view_scaling_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>../WaveformCache/WaveformCache.h</label>
        <link refid="_waveform_cache_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>JuceHeader.h</label>
      </node>
      <node id="12">
        <label>any</label>
      </node>
      <node id="38">
        <label>atomic</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="17">
        <label>juce_audio_basics/juce_audio_basics.h</label>
      </node>
      <node id="19">
        <label>juce_audio_formats/juce_audio_formats.h</label>
      </node>
      <node id="47">
        <label>juce_audio_processors/juce_audio_processors.h</label>
      </node>
      <node id="24">
        <label>juce_audio_utils/juce_audio_utils.h</label>
      </node>
      <node id="20">
        <label>juce_core/juce_core.h</label>
      </node>
      <node id="16">
        <label>juce_events/juce_events.h</label>
      </node>
      <node id="3">
        <label>juce_gui_basics/juce_gui_basics.h</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="15">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>This file is part of the JUCE examples. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2022 - Raw Material Software Limited The code included in this file is provided under the terms of the ISC license <ulink url="http://www.isc.org/downloads/software-support-policy/isc-license">http://www.isc.org/downloads/software-support-policy/isc-license</ulink>. Permission To use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted provided that the above copyright notice and this permission notice appear in all copies.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot; WITHOUT ANY WARRANTY, AND ALL WARRANTIES, WHETHER EXPRESSED OR IMPLIED, INCLUDING MERCHANTABILITY AND FITNESS FOR PURPOSE, ARE DISCLAIMED.</para>
<para>The Processor Editor is the main interaction from users into the plugin. We utilize the Processor Editor to manage the UI of the plugin and control all user input. The Processor Editor manages the UI components for user input, and manages a callback to send UI information to the deeplearning model. <simplesect kind="author"><para>JUCE, aldo aguilar, hugo flores garcia, xribene </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_processor_editor_8h" kindref="compound">ProcessorEditor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../DeepLearning/WebModel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="class_h_a_r_p_processor_editor_1a200f72ee5d0dc350eeba50832dcdd028" kindref="member">HARPProcessorEditor::HARPProcessorEditor</ref>(</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_a_r_p_audio_processor_impl" kindref="compound">HARPAudioProcessorImpl</ref><sp/>&amp;ap,<sp/><ref refid="class_editor_renderer" kindref="compound">EditorRenderer</ref><sp/>*er,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_playback_renderer" kindref="compound">PlaybackRenderer</ref><sp/>*pr,<sp/><ref refid="class_editor_view" kindref="compound">EditorView</ref><sp/>*ev)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>AudioProcessorEditor(&amp;ap),<sp/>AudioProcessorEditorARAExtension(&amp;ap)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>mEditorRenderer<sp/>=<sp/>er;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>mPlaybackRenderer<sp/>=<sp/>pr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>mEditorView<sp/>=<sp/>ev;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mEditorView<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocumentController<sp/>=<sp/>ARADocumentControllerSpecialisation::getSpecialisedDocumentController&lt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_h_a_r_p_document_controller_specialisation" kindref="compound">HARPDocumentControllerSpecialisation</ref>&gt;(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditorView-&gt;getDocumentController());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocumentController-&gt;loadBroadcaster.addChangeListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocumentController-&gt;jobProcessorThread.processBroadcaster.addChangeListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>documentView<sp/>=<sp/>std::make_unique&lt;DocumentView&gt;(*mEditorView,<sp/>ap.playHeadState);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;FATAL<sp/>HARPProcessorEditor::HARPProcessorEditor:<sp/>mEditorView<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(documentView<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>addAndMakeVisible(documentView.get());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>juce::LookAndFeel::setDefaultLookAndFeel<sp/>(&amp;mHARPLookAndFeel);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>what<sp/>happens<sp/>if<sp/>the<sp/>model<sp/>is<sp/>nullptr<sp/>rn?<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>model<sp/>=<sp/>mEditorView-&gt;getModel();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;FATAL<sp/>HARPProcessorEditor::HARPProcessorEditor:<sp/>model<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>jassertfalse;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>load<sp/>and<sp/>process<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>processButton.setButtonText(</highlight><highlight class="stringliteral">&quot;process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>processButton.addListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>model-&gt;ready()<sp/>?<sp/>processButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>processButton.setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>addAndMakeVisible(processButton);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>cancelButton.setButtonText(</highlight><highlight class="stringliteral">&quot;cancel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>cancelButton.addListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>cancelButton.setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>addAndMakeVisible(cancelButton);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>loadModelButton.setButtonText(</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>loadModelButton.addListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>addAndMakeVisible(loadModelButton);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::string<sp/>currentStatus<sp/>=<sp/>model-&gt;getStatus();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Status.LOADED&quot;</highlight><highlight class="normal"><sp/>||<sp/>currentStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Status.FINISHED&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setButtonText(</highlight><highlight class="stringliteral">&quot;process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Status.PROCESSING&quot;</highlight><highlight class="normal"><sp/>||<sp/>currentStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Status.STARTING&quot;</highlight><highlight class="normal"><sp/>||<sp/>currentStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Status.SENDING&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setButtonText(</highlight><highlight class="stringliteral">&quot;processing<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>juce::String(model-&gt;card().name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>statusLabel.setText(currentStatus,<sp/>juce::dontSendNotification);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>addAndMakeVisible(statusLabel);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>status<sp/>timer<sp/>to<sp/>update<sp/>the<sp/>status<sp/>label<sp/>periodically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>mModelStatusTimer<sp/>=<sp/>std::make_unique&lt;ModelStatusTimer&gt;(model);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>mModelStatusTimer-&gt;addChangeListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>mModelStatusTimer-&gt;startTimer(100);<sp/><sp/></highlight><highlight class="comment">//<sp/>100<sp/>ms<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>model<sp/>path<sp/>textbox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>modelPathTextBox.setMultiLine(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>modelPathTextBox.setReturnKeyStartsNewLine(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>modelPathTextBox.setReadOnly(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>modelPathTextBox.setScrollbarsShown(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>modelPathTextBox.setCaretVisible(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>modelPathTextBox.setTextToShowWhenEmpty(</highlight><highlight class="stringliteral">&quot;path<sp/>to<sp/>a<sp/>gradio<sp/>endpoint&quot;</highlight><highlight class="normal">,<sp/>juce::Colour::greyLevel(0.5f));<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>modelPathTextBox.onReturnKey<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{<sp/>loadModelButton.triggerClick();<sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>addAndMakeVisible(modelPathTextBox);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>glossary<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>glossaryLabel.setText(</highlight><highlight class="stringliteral">&quot;To<sp/>view<sp/>an<sp/>index<sp/>of<sp/>available<sp/>HARP-compatible<sp/>models,<sp/>please<sp/>see<sp/>our<sp/>&quot;</highlight><highlight class="normal">,<sp/>juce::NotificationType::dontSendNotification);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>glossaryLabel.setJustificationType(juce::Justification::centredRight);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>addAndMakeVisible(glossaryLabel);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>glossary<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>glossaryButton.setButtonText(</highlight><highlight class="stringliteral">&quot;Model<sp/>Glossary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>glossaryButton.setURL(juce::URL(</highlight><highlight class="stringliteral">&quot;https://github.com/audacitorch/HARP#available-models&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//glossaryButton.setJustificationType(juce::Justification::centredLeft);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>glossaryButton.addListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>addAndMakeVisible(glossaryButton);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;ready())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>modelPathTextBox.setText(model-&gt;space_url());<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>modelPathTextBox.setText(</highlight><highlight class="stringliteral">&quot;path<sp/>to<sp/>a<sp/>gradio<sp/>endpoint&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>addAndMakeVisible(modelPathTextBox);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>model<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>ctrlComponent.setModel(mEditorView-&gt;getModel());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>addAndMakeVisible(ctrlComponent);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>ctrlComponent.populateGui();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>addAndMakeVisible(nameLabel);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>addAndMakeVisible(authorLabel);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>addAndMakeVisible(descriptionLabel);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>addAndMakeVisible(tagsLabel);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>model<sp/>card<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>modelCard<sp/>from<sp/>the<sp/>EditorView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;card<sp/>=<sp/>mEditorView-&gt;getModel()-&gt;card();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>setModelCard(card);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ARA<sp/>requires<sp/>that<sp/>plugin<sp/>editors<sp/>are<sp/>resizable<sp/>to<sp/>support<sp/>tight<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>the<sp/>host<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>setResizable(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>setSize(800,<sp/>500);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HARPProcessorEditor::setModelCard(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_model_card" kindref="compound">ModelCard</ref>&amp;<sp/>card)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>text<sp/>for<sp/>the<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>nameLabel.setText(juce::String(card.name),<sp/>juce::dontSendNotification);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>descriptionLabel.setText(juce::String(card.description),<sp/>juce::dontSendNotification);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>author<sp/>label<sp/>text<sp/>to<sp/>&quot;by<sp/>{author}&quot;<sp/>only<sp/>if<sp/>{author}<sp/>isn&apos;t<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>card.author.empty()<sp/>?</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>authorLabel.setText(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>juce::dontSendNotification)<sp/>:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>authorLabel.setText(</highlight><highlight class="stringliteral">&quot;by<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>juce::String(card.author),<sp/>juce::dontSendNotification);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HARPProcessorEditor::buttonClicked(Button<sp/>*button)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(button<sp/>==<sp/>&amp;processButton)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;HARPProcessorEditor::buttonClicked<sp/>button<sp/>listener<sp/>activated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>model<sp/>=<sp/>mEditorView-&gt;<ref refid="class_editor_view_1a70af17ce15a4644eedc950f93e56d21e" kindref="member">getModel</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocumentController-&gt;executeProcess(model);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>button<sp/>text<sp/>to<sp/>&quot;processing<sp/>{model.card().name}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setButtonText(</highlight><highlight class="stringliteral">&quot;processing<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>juce::String(model-&gt;card().name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>cancel<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(button<sp/>==<sp/>&amp;loadModelButton)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;HARPProcessorEditor::buttonClicked<sp/>load<sp/>model<sp/>button<sp/>listener<sp/>activated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collect<sp/>input<sp/>parameters<sp/>for<sp/>the<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::any&gt;<sp/>params<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/>modelPathTextBox.getText().toStdString()},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>resetUI();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loading<sp/>happens<sp/>asynchronously.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>document<sp/>controller<sp/>trigger<sp/>a<sp/>change<sp/>listener<sp/>callback,<sp/>which<sp/>will<sp/>update<sp/>the<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocumentController-&gt;executeLoad(params);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>load<sp/>button<sp/>until<sp/>the<sp/>model<sp/>is<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>loadModelButton.setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>loadModelButton.setButtonText(</highlight><highlight class="stringliteral">&quot;loading...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>process<sp/>button<sp/>until<sp/>the<sp/>model<sp/>is<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>descriptionLabel<sp/>to<sp/>&quot;loading<sp/>{url}...&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>we<sp/>need<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>params<sp/>map,<sp/>and<sp/>just<sp/>pass<sp/>the<sp/>url<sp/>around<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>it<sp/>looks<sp/>like<sp/>we&apos;re<sp/>sticking<sp/>to<sp/>webmodels.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>juce::String<sp/>url<sp/>=<sp/>juce::String(std::any_cast&lt;std::string&gt;(params.at(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptionLabel.setText(</highlight><highlight class="stringliteral">&quot;loading<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>url<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;...\n<sp/>if<sp/>this<sp/>takes<sp/>a<sp/>while,<sp/>check<sp/>if<sp/>the<sp/>huggingface<sp/>space<sp/>is<sp/>sleeping<sp/>by<sp/>visiting<sp/>\n<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;huggingface.co/spaces/&quot;</highlight><highlight class="normal"><sp/>+<sp/>url<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Once<sp/>the<sp/>huggingface<sp/>space<sp/>is<sp/>awake,<sp/>try<sp/>again.&quot;</highlight><highlight class="normal"><sp/>,<sp/>juce::dontSendNotification);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>here,<sp/>we<sp/>should<sp/>also<sp/>reset<sp/>the<sp/>highlighting<sp/>of<sp/>the<sp/>playback<sp/>regions<sp/>to<sp/>the<sp/>default<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(button<sp/>==<sp/>&amp;cancelButton)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;HARPProcessorEditor::buttonClicked<sp/>cancel<sp/>button<sp/>listener<sp/>activated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocumentController-&gt;getModel()-&gt;cancel();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;a<sp/>button<sp/>was<sp/>pressed,<sp/>but<sp/>we<sp/>didn&apos;t<sp/>do<sp/>anything.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HARPProcessorEditor::changeListenerCallback(juce::ChangeBroadcaster<sp/>*source)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>&amp;mDocumentController-&gt;loadBroadcaster)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Model<sp/>loading<sp/>happens<sp/>synchronously,<sp/>so<sp/>we<sp/>can<sp/>be<sp/>sure<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Editor<sp/>View<sp/>has<sp/>the<sp/>model<sp/>card<sp/>and<sp/>UI<sp/>attributes<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;Setting<sp/>up<sp/>model<sp/>card,<sp/>CtrlComponent,<sp/>resizing.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>setModelCard(mEditorView-&gt;<ref refid="class_editor_view_1a70af17ce15a4644eedc950f93e56d21e" kindref="member">getModel</ref>()-&gt;card());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrlComponent.setModel(mEditorView-&gt;<ref refid="class_editor_view_1a70af17ce15a4644eedc950f93e56d21e" kindref="member">getModel</ref>());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrlComponent.populateGui();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>resized();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>we<sp/>can<sp/>enable<sp/>the<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>loadModelButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>loadModelButton.setButtonText(</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>&amp;mDocumentController-&gt;jobProcessorThread.processBroadcaster)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>we<sp/>can<sp/>enable<sp/>the<sp/>process<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setButtonText(</highlight><highlight class="stringliteral">&quot;process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelButton.setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>mModelStatusTimer.get())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>status<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;HARPProcessorEditor::changeListenerCallback:<sp/>updating<sp/>status<sp/>label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>statusLabel.setText(mEditorView-&gt;<ref refid="class_editor_view_1a70af17ce15a4644eedc950f93e56d21e" kindref="member">getModel</ref>()-&gt;getStatus(),<sp/>juce::dontSendNotification);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>DBG(</highlight><highlight class="stringliteral">&quot;HARPProcessorEditor::changeListenerCallback:<sp/>unhandled<sp/>change<sp/>broadcaster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HARPProcessorEditor::paint(Graphics<sp/>&amp;g)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>g.fillAll(getLookAndFeel().findColour(ResizableWindow::backgroundColourId));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isARAEditorView())<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>g.setColour(Colours::white);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>g.setFont(15.0f);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>g.drawFittedText(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ARA<sp/>host<sp/>isn&apos;t<sp/>detected.<sp/>This<sp/>plugin<sp/>only<sp/>supports<sp/>ARA<sp/>mode&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getLocalBounds(),<sp/>Justification::centred,<sp/>1);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HARPProcessorEditor::resized()<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>getLocalBounds();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>margin<sp/>=<sp/>10;<sp/><sp/></highlight><highlight class="comment">//<sp/>Adjusted<sp/>margin<sp/>value<sp/>for<sp/>top<sp/>and<sp/>bottom<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>docViewHeight<sp/>=<sp/>100;<sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mainArea<sp/>=<sp/>area.removeFromTop(area.getHeight()<sp/>-<sp/>docViewHeight);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>documentViewArea<sp/>=<sp/>area;<sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>remains<sp/>is<sp/>the<sp/>15%<sp/>area<sp/>for<sp/>documentView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>1:<sp/>Model<sp/>Path<sp/>TextBox<sp/>and<sp/>Load<sp/>Model<sp/>Button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row1<sp/>=<sp/>mainArea.removeFromTop(40);<sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>height<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>modelPathTextBox.setBounds(row1.removeFromLeft(row1.getWidth()<sp/>*<sp/>0.8f).reduced(margin));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>loadModelButton.setBounds(row1.reduced(margin));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>2:<sp/>Glossary<sp/>Label<sp/>and<sp/>Hyperlink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row2<sp/>=<sp/>mainArea.removeFromTop(30);<sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>height<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryLabel.setBounds(row2.removeFromLeft(row2.getWidth()<sp/>*<sp/>0.8f).reduced(margin));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryButton.setBounds(row2.reduced(margin));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryLabel.setFont(Font(11.0f));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryButton.setFont(Font(11.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>juce::Justification::centredLeft);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>3:<sp/>Name<sp/>and<sp/>Author<sp/>Labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row3a<sp/>=<sp/>mainArea.removeFromTop(40);<sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>height<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>nameLabel.setBounds(row3a.removeFromLeft(row3a.getWidth()<sp/>/<sp/>2).reduced(margin));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>nameLabel.setFont(Font(20.0f,<sp/>Font::bold));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>nameLabel.setColour(Label::textColourId,<sp/>mHARPLookAndFeel.textHeaderColor);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row3b<sp/>=<sp/>mainArea.removeFromTop(30);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>authorLabel.setBounds(row3b.reduced(margin));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>authorLabel.setFont(Font(10.0f));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>4:<sp/>Description<sp/>Label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row4<sp/>=<sp/>mainArea.removeFromTop(80);<sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>height<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptionLabel.setBounds(row4.reduced(margin));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>6:<sp/>Process<sp/>Button<sp/>(taken<sp/>out<sp/>in<sp/>advance<sp/>to<sp/>preserve<sp/>its<sp/>height)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row6Height<sp/>=<sp/>25;<sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>height<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row6<sp/>=<sp/>mainArea.removeFromBottom(row6Height);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>5:<sp/>CtrlComponent<sp/>(flexible<sp/>height)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row5<sp/>=<sp/>mainArea;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>remaining<sp/>area<sp/>is<sp/>for<sp/>row<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrlComponent.setBounds(row5.reduced(margin));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>bounds<sp/>to<sp/>processButton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>processButton.setBounds(row6.withSizeKeepingCentre(100,<sp/>20));<sp/><sp/></highlight><highlight class="comment">//<sp/>centering<sp/>the<sp/>button<sp/>in<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>the<sp/>cancel<sp/>button<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>process<sp/>button<sp/>(justified<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelButton.setBounds(processButton.getBounds().translated(110,<sp/>0));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>the<sp/>status<sp/>label<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>process<sp/>button<sp/>(justified<sp/>left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>statusLabel.setBounds(processButton.getBounds().translated(-200,<sp/>0));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DocumentView<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(documentView<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentView-&gt;setBounds(documentViewArea);<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>set<sp/>the<sp/>bounds<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Source/ARA/ProcessorEditor.cpp"/>
  </compounddef>
</doxygen>
